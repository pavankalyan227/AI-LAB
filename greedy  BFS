#greedy BFS
graph={
    's':[['a','b'],13],
    'a':[['c','d'],12],
    'b':[['e','f'],4],
    'c':[[],7],
    'd':[[],3],
    'e':[['h'],8],
    'f':[['i','g'],2],
    'h':[[],4],
    'i':[[],9],
    'g':[[],0]
}
def sortarg(f):
    for i in range(len(f)):
        for j in range(len(f)):
            if graph[f[i]][1]<graph[f[j]][1]:
                f[i],f[j]=f[j],f[i]
    return f
def greedybfs(start,goal,graph):
    f=[]
    e=[]
    f.append(start)
    while f:
        f=sortarg(f)
        node=f.pop(0)
        print(node,graph[node][1])
        if node==goal:
            print("goal found")
            return 1
        e.append(node)
        f.clear()
        for i in graph[node][0]:
            f.append(i)
    return 0
greedybfs('s','g',graph)
#output
s 13
b 4
f 2
g 0
goal found
Out[9]:
1
